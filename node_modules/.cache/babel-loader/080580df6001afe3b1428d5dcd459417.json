{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Recipes-App/Recipes-App/src/pages/DrinkInProgress/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getDrinkById } from '../../services/api';\nimport getIngredientsAndMeasures, { toggleFavoriteRecipe, isRecipeFavorited } from '../../helpers';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteIcon from '../../images/whiteHeartIcon.svg';\nimport blackIcon from '../../images/blackHeartIcon.svg';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DrinkInProgress = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    pathname\n  } = useLocation();\n  const [recipe, setRecipe] = useState([]);\n  const [btnState, setBtnState] = useState(true);\n  const [IngredientsdAndMeasures, setIngredientsAndMeasures] = useState([]);\n  const [showLinkCopied, setShowLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n  const getDrink = useCallback(async () => {\n    const drink = await getDrinkById(pathname.split('/')[2]);\n    setRecipe(drink.drinks);\n    setIngredientsAndMeasures(getIngredientsAndMeasures(Object.entries(drink.drinks[0])));\n  }, [pathname]);\n\n  const setLocalStorage = () => {\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!inProgressRecipe) {\n      const storageProgress = JSON.stringify({\n        cocktails: {},\n        meals: {}\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setNewIngredient = id => {\n    const {\n      idDrink\n    } = recipe[0];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const someIngredient = inProgressRecipe.cocktails[idDrink].some(e => e === id);\n\n    if (someIngredient) {\n      const filter = inProgressRecipe.cocktails[idDrink].filter(e => e !== id);\n      const storageProgress = JSON.stringify({ ...inProgressRecipe,\n        cocktails: { ...inProgressRecipe.cocktails,\n          [idDrink]: filter\n        }\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    } else {\n      const storageProgress = JSON.stringify({ ...inProgressRecipe,\n        cocktails: { ...inProgressRecipe.cocktails,\n          [idDrink]: [...inProgressRecipe.cocktails[idDrink], id]\n        }\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setNewRecipe = () => {\n    const {\n      idDrink\n    } = recipe[0];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const progressRecipeKeys = Object.keys(inProgressRecipe.cocktails);\n    const hasIt = progressRecipeKeys.some(e => e === idDrink);\n\n    if (!hasIt) {\n      const storageProgress = JSON.stringify({ ...inProgressRecipe,\n        cocktails: { ...inProgressRecipe.cocktails,\n          [idDrink]: []\n        }\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setLine = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      id\n    } = target;\n    setNewIngredient(id);\n    const idDrink = pathname.split('/')[2];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientsLength = inProgressRecipe.cocktails[idDrink].length;\n\n    if (ingredientsLength === IngredientsdAndMeasures.length) {\n      setBtnState(false);\n    } else {\n      setBtnState(true);\n    }\n  };\n\n  const isItDone = id => {\n    const idDrink = pathname.split('/')[2];\n    const converted = id.toString();\n    setNewRecipe();\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const someI = inProgressRecipe.cocktails[idDrink].some(e => e === converted);\n\n    if (someI) {\n      return true;\n    }\n\n    if (!someI) {\n      return false;\n    }\n  };\n\n  const handleClick = () => {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    const {\n      idDrink,\n      strCategory,\n      strAlcoholic,\n      strDrink,\n      strDrinkThumb,\n      strTags\n    } = recipe[0];\n    const structure = {\n      id: idDrink,\n      type: 'drink',\n      category: strCategory || '',\n      alcoholicOrNot: strAlcoholic || '',\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: new Date(),\n      tags: [strTags] || []\n    };\n\n    if (!doneRecipes) {\n      const storage = JSON.stringify([structure]);\n      localStorage.setItem('doneRecipes', storage);\n    }\n\n    if (doneRecipes) {\n      const storage = JSON.stringify([...doneRecipes, structure]);\n      localStorage.setItem('doneRecipes', storage);\n    }\n\n    history.push('/done-recipes');\n  };\n\n  useEffect(() => {\n    setLocalStorage();\n    const idDrink = pathname.split('/')[2];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientsLength = inProgressRecipe.cocktails[idDrink] ? inProgressRecipe.cocktails[idDrink].length : 0;\n\n    if (ingredientsLength !== 0 && ingredientsLength === IngredientsdAndMeasures.length) {\n      setBtnState(false);\n    }\n  }, [IngredientsdAndMeasures, pathname]);\n  useEffect(() => {\n    getDrink();\n    setIsFavorited(isRecipeFavorited(pathname.split('/')[2]));\n  }, [getDrink, pathname]);\n  return recipe === null || recipe === void 0 ? void 0 : recipe.map(drink => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: drink.strDrinkThumb,\n      alt: drink.strDrinkThumb,\n      \"data-testid\": \"recipe-photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.recipeHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          \"data-testid\": \"recipe-title\",\n          children: drink.strDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"recipe-category\",\n          children: drink.strAlcoholic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"share-btn\",\n          onClick: () => {\n            navigator.clipboard.writeText('http://localhost:3000/drinks/'.concat(drink.idDrink));\n            setShowLinkCopied(true);\n            setTimeout(() => {\n              setShowLinkCopied(false);\n            }, [Number('1000')]);\n          },\n          children: [showLinkCopied && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Link copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareIcon,\n            alt: \"share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            console.log(drink.alcoholicOrNot);\n            toggleFavoriteRecipe(isFavorited, {\n              id: drink.idDrink,\n              type: 'drink',\n              nationality: '',\n              category: drink.strCategory,\n              alcoholicOrNot: drink.strAlcoholic,\n              name: drink.strDrink,\n              image: drink.strDrinkThumb\n            });\n            setIsFavorited(!isFavorited);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-testid\": \"favorite-btn\",\n            src: isFavorited ? blackIcon : whiteIcon,\n            alt: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: IngredientsdAndMeasures.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": String(index).concat('-ingredient-step'),\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: index,\n            children: [value.ingredient, value.measure && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"-\", value.measure]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n              defaultChecked: isItDone(index),\n              onClick: setLine,\n              id: index,\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: drink.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"finish-recipe-btn\",\n        type: \"button\",\n        disabled: btnState,\n        onClick: handleClick,\n        children: \"Finish Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, drink.idDrink, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 7\n  }, this));\n};\n\n_s(DrinkInProgress, \"3NyCieqcQjbw+i4xnD3zHeYr1Lc=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = DrinkInProgress;\nexport default DrinkInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinkInProgress\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Recipes-App/Recipes-App/src/pages/DrinkInProgress/index.jsx"],"names":["React","useState","useEffect","useCallback","useHistory","useLocation","getDrinkById","getIngredientsAndMeasures","toggleFavoriteRecipe","isRecipeFavorited","shareIcon","whiteIcon","blackIcon","style","DrinkInProgress","history","pathname","recipe","setRecipe","btnState","setBtnState","IngredientsdAndMeasures","setIngredientsAndMeasures","showLinkCopied","setShowLinkCopied","isFavorited","setIsFavorited","getDrink","drink","split","drinks","Object","entries","setLocalStorage","inProgressRecipe","JSON","parse","localStorage","getItem","storageProgress","stringify","cocktails","meals","setItem","setNewIngredient","id","idDrink","someIngredient","some","e","filter","setNewRecipe","progressRecipeKeys","keys","hasIt","setLine","target","ingredientsLength","length","isItDone","converted","toString","someI","handleClick","doneRecipes","strCategory","strAlcoholic","strDrink","strDrinkThumb","strTags","structure","type","category","alcoholicOrNot","name","image","doneDate","Date","tags","storage","push","map","container","recipeHeader","navigator","clipboard","writeText","concat","setTimeout","Number","console","log","nationality","value","index","String","ingredient","measure","Math","random","strInstructions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getDrinkById } from '../../services/api';\nimport getIngredientsAndMeasures, { toggleFavoriteRecipe,\n  isRecipeFavorited } from '../../helpers';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteIcon from '../../images/whiteHeartIcon.svg';\nimport blackIcon from '../../images/blackHeartIcon.svg';\n\nimport style from './style.module.scss';\n\nconst DrinkInProgress = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const [recipe, setRecipe] = useState([]);\n  const [btnState, setBtnState] = useState(true);\n  const [IngredientsdAndMeasures, setIngredientsAndMeasures] = useState([]);\n  const [showLinkCopied, setShowLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n\n  const getDrink = useCallback(\n    async () => {\n      const drink = await getDrinkById(pathname.split('/')[2]);\n      setRecipe(drink.drinks);\n      setIngredientsAndMeasures(\n        getIngredientsAndMeasures(Object.entries(drink.drinks[0])),\n      );\n    },\n    [pathname],\n  );\n\n  const setLocalStorage = () => {\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!inProgressRecipe) {\n      const storageProgress = JSON.stringify({\n        cocktails: {},\n        meals: {},\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setNewIngredient = (id) => {\n    const { idDrink } = recipe[0];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const someIngredient = inProgressRecipe.cocktails[idDrink].some((e) => e === id);\n    if (someIngredient) {\n      const filter = inProgressRecipe.cocktails[idDrink].filter((e) => e !== id);\n      const storageProgress = JSON.stringify({\n        ...inProgressRecipe,\n        cocktails: { ...inProgressRecipe.cocktails,\n          [idDrink]: filter },\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    } else {\n      const storageProgress = JSON.stringify({\n        ...inProgressRecipe,\n        cocktails: { ...inProgressRecipe.cocktails,\n          [idDrink]: [...inProgressRecipe.cocktails[idDrink], id] },\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setNewRecipe = () => {\n    const { idDrink } = recipe[0];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const progressRecipeKeys = Object.keys(inProgressRecipe.cocktails);\n    const hasIt = progressRecipeKeys.some((e) => e === idDrink);\n    if (!hasIt) {\n      const storageProgress = JSON.stringify({\n        ...inProgressRecipe,\n        cocktails: { ...inProgressRecipe.cocktails, [idDrink]: [] },\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setLine = ({ target }) => {\n    const { id } = target;\n    setNewIngredient(id);\n    const idDrink = pathname.split('/')[2];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientsLength = inProgressRecipe.cocktails[idDrink].length;\n    if (ingredientsLength === IngredientsdAndMeasures.length) {\n      setBtnState(false);\n    } else {\n      setBtnState(true);\n    }\n  };\n\n  const isItDone = (id) => {\n    const idDrink = pathname.split('/')[2];\n    const converted = id.toString();\n    setNewRecipe();\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const someI = inProgressRecipe.cocktails[idDrink].some((e) => e === converted);\n    if (someI) {\n      return true;\n    }\n    if (!someI) {\n      return false;\n    }\n  };\n\n  const handleClick = () => {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    const { idDrink, strCategory, strAlcoholic, strDrink, strDrinkThumb,\n      strTags } = recipe[0];\n    const structure = {\n      id: idDrink,\n      type: 'drink',\n      category: strCategory || '',\n      alcoholicOrNot: strAlcoholic || '',\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: new Date(),\n      tags: [strTags] || [],\n    };\n    if (!doneRecipes) {\n      const storage = JSON.stringify([structure]);\n      localStorage.setItem('doneRecipes', storage);\n    }\n    if (doneRecipes) {\n      const storage = JSON.stringify([...doneRecipes, structure]);\n      localStorage.setItem('doneRecipes', storage);\n    }\n    history.push('/done-recipes');\n  };\n\n  useEffect(() => {\n    setLocalStorage();\n    const idDrink = pathname.split('/')[2];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientsLength = inProgressRecipe.cocktails[idDrink]\n      ? inProgressRecipe.cocktails[idDrink].length : 0;\n    if (ingredientsLength !== 0 && ingredientsLength === IngredientsdAndMeasures.length) {\n      setBtnState(false);\n    }\n  }, [IngredientsdAndMeasures, pathname]);\n\n  useEffect(() => {\n    getDrink();\n    setIsFavorited(isRecipeFavorited(pathname.split('/')[2]));\n  }, [getDrink, pathname]);\n\n  return (\n    recipe?.map((drink) => (\n      <section className={ style.container } key={ drink.idDrink }>\n        <img\n          src={ drink.strDrinkThumb }\n          alt={ drink.strDrinkThumb }\n          data-testid=\"recipe-photo\"\n        />\n        <div className={ style.recipeHeader }>\n          <aside>\n            <h1 data-testid=\"recipe-title\">{drink.strDrink}</h1>\n            <span data-testid=\"recipe-category\">{drink.strAlcoholic}</span>\n          </aside>\n          <div>\n            <button\n              type=\"button\"\n              data-testid=\"share-btn\"\n              onClick={ () => {\n                navigator.clipboard.writeText(\n                  'http://localhost:3000/drinks/'.concat(drink.idDrink),\n                );\n                setShowLinkCopied(true);\n                setTimeout(() => {\n                  setShowLinkCopied(false);\n                }, [Number('1000')]);\n              } }\n            >\n              {showLinkCopied && (\n                <p>Link copied!</p>\n              )}\n              <img src={ shareIcon } alt=\"share\" />\n            </button>\n            <button\n              type=\"button\"\n              onClick={ () => {\n                console.log(drink.alcoholicOrNot);\n                toggleFavoriteRecipe(isFavorited, {\n                  id: drink.idDrink,\n                  type: 'drink',\n                  nationality: '',\n                  category: drink.strCategory,\n                  alcoholicOrNot: drink.strAlcoholic,\n                  name: drink.strDrink,\n                  image: drink.strDrinkThumb,\n                });\n                setIsFavorited(!isFavorited);\n              } }\n            >\n              <img\n                data-testid=\"favorite-btn\"\n                src={ isFavorited ? blackIcon : whiteIcon }\n                alt=\"favorite\"\n              />\n            </button>\n          </div>\n        </div>\n        <main>\n          <h3>Ingredients</h3>\n          <ul>\n            {IngredientsdAndMeasures.map((value, index) => (\n              <li\n                key={ Math.random() }\n                data-testid={ String(index).concat('-ingredient-step') }\n              >\n                <label htmlFor={ index }>\n                  {value.ingredient}\n                  {value.measure && (\n                    <>\n                      -\n                      {value.measure}\n                    </>\n                  )}\n                  <input\n                    defaultChecked={ isItDone(index) }\n                    onClick={ setLine }\n                    id={ index }\n                    type=\"checkbox\"\n                  />\n                </label>\n              </li>\n            ))}\n          </ul>\n          <div>\n            <h3>Instructions</h3>\n            <p data-testid=\"instructions\">\n              {drink.strInstructions}\n            </p>\n          </div>\n          <button\n            data-testid=\"finish-recipe-btn\"\n            type=\"button\"\n            disabled={ btnState }\n            onClick={ handleClick }\n          >\n            Finish Recipe\n          </button>\n        </main>\n      </section>\n    ))\n  );\n};\nexport default DrinkInProgress;\n"]},"metadata":{},"sourceType":"module"}