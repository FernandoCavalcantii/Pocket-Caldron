{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/FoodDetails/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getFoodById, getDrinksRecipes } from '../../services/api';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteIcon from '../../images/whiteHeartIcon.svg';\nimport blackIcon from '../../images/blackHeartIcon.svg';\nimport getIngredientsAndMeasures, { isRecipeCompleted, isInProgressRecipe, isRecipeFavorited, toggleFavoriteRecipe } from '../../helpers';\nimport Carousel from '../../components/Carousel';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Details = () => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const history = useHistory();\n  const [recipe, setRecipe] = useState([]);\n  const [IngredientsdAndMeasures, setIngredientsAndMeasures] = useState([]);\n  const [recomendation, setRecomendation] = useState([]);\n  const [isCompleted, setIsCompleted] = useState([false]);\n  const [isInProgress, setIsInProgress] = useState([false]);\n  const [showLinkCopied, setShowLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n  const getFood = useCallback(async () => {\n    const food = await getFoodById(pathname.split('/')[2]);\n    setRecipe(food.meals);\n    setIngredientsAndMeasures(getIngredientsAndMeasures(Object.entries(food.meals[0])));\n  }, [pathname]);\n  const getRecomendation = useCallback(async () => {\n    const res = await getDrinksRecipes();\n    setRecomendation(res.drinks);\n  }, []);\n  useEffect(() => {\n    getFood();\n    getRecomendation();\n    setIsCompleted(isRecipeCompleted(pathname.split('/')[2]));\n    setIsInProgress(isInProgressRecipe(pathname.split('/')[2], 'meals'));\n    setIsFavorited(isRecipeFavorited(pathname.split('/')[2]));\n  }, [getFood, getRecomendation, pathname]);\n  return recipe === null || recipe === void 0 ? void 0 : recipe.map(food => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: food.strMealThumb,\n      alt: food.strMealThumb,\n      \"data-testid\": \"recipe-photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.recipeHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          \"data-testid\": \"recipe-title\",\n          children: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"recipe-category\",\n          children: food.strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            navigator.clipboard.writeText('http://localhost:3000/foods/'.concat(food.idMeal));\n            setShowLinkCopied(true);\n            setTimeout(() => {\n              setShowLinkCopied(false);\n            }, [Number('1000')]);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareIcon,\n            alt: \"share\",\n            \"data-testid\": \"share-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), showLinkCopied && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            right: '0',\n            margin: 'auto'\n          },\n          children: \"Link copied!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            toggleFavoriteRecipe(isFavorited, {\n              id: food.idMeal,\n              type: 'food',\n              nationality: food.strArea,\n              category: food.strCategory,\n              alcoholicOrNot: '',\n              name: food.strMeal,\n              image: food.strMealThumb\n            });\n            setIsFavorited(!isFavorited);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-testid\": \"favorite-btn\",\n            src: isFavorited ? blackIcon : whiteIcon,\n            alt: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), IngredientsdAndMeasures.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": String(index).concat('-ingredient-name-and-measure'),\n          children: [value.ingredient, \"-\", value.measure]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: food.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        \"data-testid\": \"video\",\n        title: food.strMeal,\n        src: 'https://www.youtube.com/embed/'.concat(food.strYoutube.split('=')[1]),\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        recomendation: recomendation,\n        drinkOrMeal: \"Drink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), !isCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"start-recipe-btn\" // style={ { position: 'fixed', bottom: 0 } }\n        ,\n        onClick: () => history.push('/foods/'.concat(String(food.idMeal), '/in-progress')),\n        children: isInProgress ? 'Continue Recipe' : 'Start recipe'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, food.idMeal, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this));\n};\n\n_s(Details, \"9d4GykpKt1i/dE9NHH5EI4tFfsU=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/FoodDetails/index.jsx"],"names":["React","useState","useEffect","useCallback","useHistory","useLocation","getFoodById","getDrinksRecipes","shareIcon","whiteIcon","blackIcon","getIngredientsAndMeasures","isRecipeCompleted","isInProgressRecipe","isRecipeFavorited","toggleFavoriteRecipe","Carousel","style","Details","pathname","history","recipe","setRecipe","IngredientsdAndMeasures","setIngredientsAndMeasures","recomendation","setRecomendation","isCompleted","setIsCompleted","isInProgress","setIsInProgress","showLinkCopied","setShowLinkCopied","isFavorited","setIsFavorited","getFood","food","split","meals","Object","entries","getRecomendation","res","drinks","map","container","strMealThumb","recipeHeader","strMeal","strCategory","navigator","clipboard","writeText","concat","idMeal","setTimeout","Number","position","top","left","right","margin","id","type","nationality","strArea","category","alcoholicOrNot","name","image","value","index","String","ingredient","measure","Math","random","strInstructions","strYoutube","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getFoodById, getDrinksRecipes } from '../../services/api';\n\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteIcon from '../../images/whiteHeartIcon.svg';\nimport blackIcon from '../../images/blackHeartIcon.svg';\nimport getIngredientsAndMeasures, {\n  isRecipeCompleted, isInProgressRecipe,\n  isRecipeFavorited,\n  toggleFavoriteRecipe } from '../../helpers';\n\nimport Carousel from '../../components/Carousel';\n\nimport style from './style.module.scss';\n\nconst Details = () => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const [recipe, setRecipe] = useState([]);\n  const [IngredientsdAndMeasures, setIngredientsAndMeasures] = useState([]);\n  const [recomendation, setRecomendation] = useState([]);\n  const [isCompleted, setIsCompleted] = useState([false]);\n  const [isInProgress, setIsInProgress] = useState([false]);\n  const [showLinkCopied, setShowLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n\n  const getFood = useCallback(\n    async () => {\n      const food = await getFoodById(pathname.split('/')[2]);\n      setRecipe(food.meals);\n      setIngredientsAndMeasures(\n        getIngredientsAndMeasures(Object.entries(food.meals[0])),\n      );\n    },\n    [pathname],\n  );\n\n  const getRecomendation = useCallback(async () => {\n    const res = await getDrinksRecipes();\n    setRecomendation(res.drinks);\n  }, []);\n\n  useEffect(() => {\n    getFood();\n    getRecomendation();\n    setIsCompleted(isRecipeCompleted(pathname.split('/')[2]));\n    setIsInProgress(isInProgressRecipe(pathname.split('/')[2], 'meals'));\n    setIsFavorited(isRecipeFavorited(pathname.split('/')[2]));\n  }, [getFood, getRecomendation, pathname]);\n\n  return (\n    recipe?.map((food) => (\n      <section className={ style.container } key={ food.idMeal }>\n        <img\n          src={ food.strMealThumb }\n          alt={ food.strMealThumb }\n          data-testid=\"recipe-photo\"\n        />\n        <div className={ style.recipeHeader }>\n          <aside>\n            <h1 data-testid=\"recipe-title\">{food.strMeal}</h1>\n            <span data-testid=\"recipe-category\">{food.strCategory}</span>\n          </aside>\n          <div>\n            <button\n              type=\"button\"\n              onClick={ () => {\n                navigator.clipboard.writeText('http://localhost:3000/foods/'.concat(food.idMeal));\n                setShowLinkCopied(true);\n                setTimeout(() => {\n                  setShowLinkCopied(false);\n                }, [Number('1000')]);\n              } }\n            >\n              <img\n                src={ shareIcon }\n                alt=\"share\"\n                data-testid=\"share-btn\"\n              />\n            </button>\n            {showLinkCopied && (\n              <p\n                style={ { position: 'absolute',\n                  top: '0',\n                  left: '0',\n                  right: '0',\n                  margin: 'auto' } }\n              >\n                Link copied!\n              </p>\n            )}\n            <button\n              type=\"button\"\n              onClick={ () => {\n                toggleFavoriteRecipe(isFavorited, {\n                  id: food.idMeal,\n                  type: 'food',\n                  nationality: food.strArea,\n                  category: food.strCategory,\n                  alcoholicOrNot: '',\n                  name: food.strMeal,\n                  image: food.strMealThumb,\n                });\n                setIsFavorited(!isFavorited);\n              } }\n            >\n              <img\n                data-testid=\"favorite-btn\"\n                src={ isFavorited ? blackIcon : whiteIcon }\n                alt=\"favorite\"\n              />\n            </button>\n          </div>\n        </div>\n        <main>\n          <ul>\n            <h3>Ingredients</h3>\n            {IngredientsdAndMeasures.map((value, index) => (\n              <li\n                key={ Math.random() }\n                data-testid={ String(index).concat('-ingredient-name-and-measure') }\n              >\n                {value.ingredient}\n                -\n                {value.measure}\n              </li>\n            ))}\n          </ul>\n          <div>\n            <h3>Instructions</h3>\n            <p data-testid=\"instructions\">\n              {food.strInstructions}\n            </p>\n          </div>\n          <iframe\n            data-testid=\"video\"\n            title={ food.strMeal }\n            src={ 'https://www.youtube.com/embed/'.concat(food.strYoutube.split('=')[1]) }\n            frameBorder=\"0\"\n          />\n          <Carousel recomendation={ recomendation } drinkOrMeal=\"Drink\" />\n          {!isCompleted && (\n            <button\n              type=\"button\"\n              data-testid=\"start-recipe-btn\"\n              // style={ { position: 'fixed', bottom: 0 } }\n              onClick={ () => history.push('/foods/'\n                .concat(String(food.idMeal), '/in-progress')) }\n            >\n              {isInProgress ? 'Continue Recipe' : 'Start recipe'}\n            </button>\n          )}\n        </main>\n      </section>\n    ))\n  );\n};\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}