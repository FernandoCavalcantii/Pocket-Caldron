{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/FoodInProgress/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getFoodById } from '../../services/api';\nimport getIngredientsAndMeasures, { toggleFavoriteRecipe, isRecipeFavorited } from '../../helpers';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteIcon from '../../images/whiteHeartIcon.svg';\nimport blackIcon from '../../images/blackHeartIcon.svg';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FoodInProgress = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    pathname\n  } = useLocation();\n  const [recipe, setRecipe] = useState([]);\n  const [btnState, setBtnState] = useState(true);\n  const [IngredientsdAndMeasures, setIngredientsAndMeasures] = useState([]);\n  const [showLinkCopied, setShowLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n  const getFood = useCallback(async () => {\n    const food = await getFoodById(pathname.split('/')[2]);\n    setRecipe(food.meals);\n    setIngredientsAndMeasures(getIngredientsAndMeasures(Object.entries(food.meals[0])));\n  }, [pathname]);\n\n  const setLocalStorage = () => {\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!inProgressRecipe) {\n      const storageProgress = JSON.stringify({\n        cocktails: {},\n        meals: {}\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setNewIngredient = id => {\n    const {\n      idMeal\n    } = recipe[0];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const someIngredient = inProgressRecipe.meals[idMeal].some(e => e === id);\n\n    if (someIngredient) {\n      const filterIngredients = inProgressRecipe.meals[idMeal].filter(e => e !== id);\n      const storageProgress = JSON.stringify({ ...inProgressRecipe,\n        meals: { ...inProgressRecipe.meals,\n          [idMeal]: filterIngredients\n        }\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    } else {\n      const storageProgress = JSON.stringify({ ...inProgressRecipe,\n        meals: { ...inProgressRecipe.meals,\n          [idMeal]: [...inProgressRecipe.meals[idMeal], id]\n        }\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setNewRecipe = () => {\n    const {\n      idMeal\n    } = recipe[0];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const progressRecipeKeys = Object.keys(inProgressRecipe.meals);\n    const hasIt = progressRecipeKeys.some(e => e === idMeal);\n\n    if (!hasIt) {\n      const storageProgress = JSON.stringify({ ...inProgressRecipe,\n        meals: { ...inProgressRecipe.meals,\n          [idMeal]: []\n        }\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setLine = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      id\n    } = target;\n    setNewIngredient(id);\n    const idMeal = pathname.split('/')[2];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientsLength = inProgressRecipe.meals[idMeal].length;\n\n    if (ingredientsLength === IngredientsdAndMeasures.length) {\n      setBtnState(false);\n    } else {\n      setBtnState(true);\n    }\n  };\n\n  const isItDone = id => {\n    const idMeal = pathname.split('/')[2];\n    const converted = id.toString();\n    setNewRecipe();\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const someIngredient = inProgressRecipe.meals[idMeal].some(e => e === converted);\n\n    if (someIngredient) {\n      return true;\n    }\n\n    if (!someIngredient) {\n      return false;\n    }\n  };\n\n  const handleClick = () => {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    const {\n      idMeal,\n      strArea,\n      strCategory,\n      strMeal,\n      strMealThumb,\n      strTags\n    } = recipe[0];\n    const structure = {\n      id: idMeal,\n      type: 'food',\n      nationality: strArea || '',\n      category: strCategory || '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: new Date(),\n      tags: [strTags] || []\n    };\n\n    if (!doneRecipes) {\n      const storage = JSON.stringify([structure]);\n      localStorage.setItem('doneRecipes', storage);\n    }\n\n    if (doneRecipes) {\n      const storage = JSON.stringify([...doneRecipes, structure]);\n      localStorage.setItem('doneRecipes', storage);\n    }\n\n    history.push('/done-recipes');\n  };\n\n  useEffect(() => {\n    setLocalStorage();\n    const idMeal = pathname.split('/')[2];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientsLength = inProgressRecipe.meals[idMeal] ? inProgressRecipe.meals[idMeal].length : 0;\n\n    if (ingredientsLength !== 0 && ingredientsLength === IngredientsdAndMeasures.length) {\n      setBtnState(false);\n    }\n  }, [IngredientsdAndMeasures, pathname]);\n  useEffect(() => {\n    getFood();\n    setIsFavorited(isRecipeFavorited(pathname.split('/')[2]));\n  }, [getFood, pathname]);\n  return recipe === null || recipe === void 0 ? void 0 : recipe.map(food => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: food.strMealThumb,\n      alt: food.strMealThumb,\n      \"data-testid\": \"recipe-photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.recipeHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          \"data-testid\": \"recipe-title\",\n          children: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"recipe-category\",\n          children: food.strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            navigator.clipboard.writeText('http://localhost:3000/foods/'.concat(food.idMeal));\n            setShowLinkCopied(true);\n            setTimeout(() => {\n              setShowLinkCopied(false);\n            }, [Number('1000')]);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareIcon,\n            alt: \"share\",\n            \"data-testid\": \"share-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), showLinkCopied && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Link copied! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            toggleFavoriteRecipe(isFavorited, {\n              id: food.idMeal,\n              type: 'food',\n              nationality: food.strArea,\n              category: food.strCategory,\n              alcoholicOrNot: '',\n              name: food.strMeal,\n              image: food.strMealThumb\n            });\n            setIsFavorited(!isFavorited);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-testid\": \"favorite-btn\",\n            src: isFavorited ? blackIcon : whiteIcon,\n            alt: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: IngredientsdAndMeasures.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": String(index).concat('-ingredient-step'),\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: index,\n            children: [value.ingredient, \"-\", value.measure, /*#__PURE__*/_jsxDEV(\"input\", {\n              defaultChecked: isItDone(index),\n              onClick: setLine,\n              id: index,\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: food.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        \"data-testid\": \"video\",\n        title: food.strMeal,\n        src: 'https://www.youtube.com/embed/'.concat(food.strYoutube.split('=')[1]),\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"finish-recipe-btn\",\n        type: \"button\",\n        disabled: btnState,\n        onClick: handleClick,\n        children: \"Finish Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, food.idMeal, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 7\n  }, this));\n};\n\n_s(FoodInProgress, \"zqbA+/NXrKDgUezPKZYS0EqwguU=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = FoodInProgress;\nexport default FoodInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodInProgress\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/FoodInProgress/index.jsx"],"names":["React","useState","useEffect","useCallback","useHistory","useLocation","getFoodById","getIngredientsAndMeasures","toggleFavoriteRecipe","isRecipeFavorited","shareIcon","whiteIcon","blackIcon","style","FoodInProgress","history","pathname","recipe","setRecipe","btnState","setBtnState","IngredientsdAndMeasures","setIngredientsAndMeasures","showLinkCopied","setShowLinkCopied","isFavorited","setIsFavorited","getFood","food","split","meals","Object","entries","setLocalStorage","inProgressRecipe","JSON","parse","localStorage","getItem","storageProgress","stringify","cocktails","setItem","setNewIngredient","id","idMeal","someIngredient","some","e","filterIngredients","filter","setNewRecipe","progressRecipeKeys","keys","hasIt","setLine","target","ingredientsLength","length","isItDone","converted","toString","handleClick","doneRecipes","strArea","strCategory","strMeal","strMealThumb","strTags","structure","type","nationality","category","name","image","doneDate","Date","tags","storage","push","map","container","recipeHeader","navigator","clipboard","writeText","concat","setTimeout","Number","alcoholicOrNot","value","index","String","ingredient","measure","Math","random","strInstructions","strYoutube"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getFoodById } from '../../services/api';\nimport getIngredientsAndMeasures, { toggleFavoriteRecipe,\n  isRecipeFavorited } from '../../helpers';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteIcon from '../../images/whiteHeartIcon.svg';\nimport blackIcon from '../../images/blackHeartIcon.svg';\n\nimport style from './style.module.scss';\n\nconst FoodInProgress = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const [recipe, setRecipe] = useState([]);\n  const [btnState, setBtnState] = useState(true);\n  const [IngredientsdAndMeasures, setIngredientsAndMeasures] = useState([]);\n  const [showLinkCopied, setShowLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n\n  const getFood = useCallback(\n    async () => {\n      const food = await getFoodById(pathname.split('/')[2]);\n      setRecipe(food.meals);\n      setIngredientsAndMeasures(\n        getIngredientsAndMeasures(Object.entries(food.meals[0])),\n      );\n    },\n    [pathname],\n  );\n\n  const setLocalStorage = () => {\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!inProgressRecipe) {\n      const storageProgress = JSON.stringify({\n        cocktails: {},\n        meals: {},\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setNewIngredient = (id) => {\n    const { idMeal } = recipe[0];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const someIngredient = inProgressRecipe.meals[idMeal].some((e) => e === id);\n    if (someIngredient) {\n      const filterIngredients = inProgressRecipe.meals[idMeal].filter((e) => e !== id);\n      const storageProgress = JSON.stringify({\n        ...inProgressRecipe,\n        meals: { ...inProgressRecipe.meals,\n          [idMeal]: filterIngredients },\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    } else {\n      const storageProgress = JSON.stringify({\n        ...inProgressRecipe,\n        meals: { ...inProgressRecipe.meals,\n          [idMeal]: [...inProgressRecipe.meals[idMeal], id] },\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setNewRecipe = () => {\n    const { idMeal } = recipe[0];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const progressRecipeKeys = Object.keys(inProgressRecipe.meals);\n    const hasIt = progressRecipeKeys.some((e) => e === idMeal);\n    if (!hasIt) {\n      const storageProgress = JSON.stringify({\n        ...inProgressRecipe,\n        meals: { ...inProgressRecipe.meals, [idMeal]: [] },\n      });\n      localStorage.setItem('inProgressRecipes', storageProgress);\n    }\n  };\n\n  const setLine = ({ target }) => {\n    const { id } = target;\n    setNewIngredient(id);\n    const idMeal = pathname.split('/')[2];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientsLength = inProgressRecipe.meals[idMeal].length;\n    if (ingredientsLength === IngredientsdAndMeasures.length) {\n      setBtnState(false);\n    } else {\n      setBtnState(true);\n    }\n  };\n\n  const isItDone = (id) => {\n    const idMeal = pathname.split('/')[2];\n    const converted = id.toString();\n    setNewRecipe();\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const someIngredient = inProgressRecipe.meals[idMeal].some((e) => e === converted);\n    if (someIngredient) {\n      return true;\n    }\n    if (!someIngredient) {\n      return false;\n    }\n  };\n\n  const handleClick = () => {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    const { idMeal, strArea, strCategory, strMeal, strMealThumb, strTags } = recipe[0];\n    const structure = {\n      id: idMeal,\n      type: 'food',\n      nationality: strArea || '',\n      category: strCategory || '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: new Date(),\n      tags: [strTags] || [],\n    };\n    if (!doneRecipes) {\n      const storage = JSON.stringify([structure]);\n      localStorage.setItem('doneRecipes', storage);\n    }\n    if (doneRecipes) {\n      const storage = JSON.stringify([...doneRecipes, structure]);\n      localStorage.setItem('doneRecipes', storage);\n    }\n    history.push('/done-recipes');\n  };\n\n  useEffect(() => {\n    setLocalStorage();\n    const idMeal = pathname.split('/')[2];\n    const inProgressRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientsLength = inProgressRecipe.meals[idMeal]\n      ? inProgressRecipe.meals[idMeal].length : 0;\n    if (ingredientsLength !== 0 && ingredientsLength === IngredientsdAndMeasures.length) {\n      setBtnState(false);\n    }\n  }, [IngredientsdAndMeasures, pathname]);\n\n  useEffect(() => {\n    getFood();\n    setIsFavorited(isRecipeFavorited(pathname.split('/')[2]));\n  }, [getFood, pathname]);\n\n  return (\n    recipe?.map((food) => (\n      <section className={ style.container } key={ food.idMeal }>\n        <img\n          src={ food.strMealThumb }\n          alt={ food.strMealThumb }\n          data-testid=\"recipe-photo\"\n        />\n        <div className={ style.recipeHeader }>\n          <aside>\n            <h1 data-testid=\"recipe-title\">{food.strMeal}</h1>\n            <span data-testid=\"recipe-category\">{food.strCategory}</span>\n          </aside>\n          <div>\n            <button\n              type=\"button\"\n              onClick={ () => {\n                navigator.clipboard.writeText('http://localhost:3000/foods/'.concat(food.idMeal));\n                setShowLinkCopied(true);\n                setTimeout(() => {\n                  setShowLinkCopied(false);\n                }, [Number('1000')]);\n              } }\n            >\n              <img src={ shareIcon } alt=\"share\" data-testid=\"share-btn\" />\n            </button>\n            {showLinkCopied && (\n              <p> Link copied! </p>\n            )}\n            <button\n              type=\"button\"\n              onClick={ () => {\n                toggleFavoriteRecipe(isFavorited, {\n                  id: food.idMeal,\n                  type: 'food',\n                  nationality: food.strArea,\n                  category: food.strCategory,\n                  alcoholicOrNot: '',\n                  name: food.strMeal,\n                  image: food.strMealThumb,\n                });\n                setIsFavorited(!isFavorited);\n              } }\n            >\n              <img\n                data-testid=\"favorite-btn\"\n                src={ isFavorited ? blackIcon : whiteIcon }\n                alt=\"favorite\"\n              />\n            </button>\n          </div>\n        </div>\n        <main>\n          <h3>Ingredients</h3>\n          <ul>\n            {IngredientsdAndMeasures.map((value, index) => (\n              <li\n                key={ Math.random() }\n                data-testid={ String(index).concat('-ingredient-step') }\n              >\n                <label htmlFor={ index }>\n                  {value.ingredient}\n                  -\n                  {value.measure}\n                  <input\n                    defaultChecked={ isItDone(index) }\n                    onClick={ setLine }\n                    id={ index }\n                    type=\"checkbox\"\n                  />\n                </label>\n              </li>\n            ))}\n          </ul>\n          <div>\n            <h3>Instructions</h3>\n            <p data-testid=\"instructions\">\n              {food.strInstructions}\n            </p>\n          </div>\n          <iframe\n            data-testid=\"video\"\n            title={ food.strMeal }\n            src={ 'https://www.youtube.com/embed/'.concat(food.strYoutube.split('=')[1]) }\n            frameBorder=\"0\"\n          />\n          <button\n            data-testid=\"finish-recipe-btn\"\n            type=\"button\"\n            disabled={ btnState }\n            onClick={ handleClick }\n          >\n            Finish Recipe\n          </button>\n        </main>\n      </section>\n    ))\n  );\n};\nexport default FoodInProgress;\n"]},"metadata":{},"sourceType":"module"}