{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/DoneRecipes/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DoneRecipeCard from '../../components/DoneRecipeCard';\nimport style from './style.module.scss';\nimport Header from '../../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DoneRecipes = () => {\n  _s();\n\n  const allFoods = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  useEffect(() => {\n    setDoneRecipes(JSON.parse(localStorage.getItem('doneRecipes')));\n  }, []);\n\n  const handleClick = _ref => {\n    let {\n      target\n    } = _ref;\n    console.log(target.innerText);\n\n    switch (target.innerText) {\n      case 'All':\n        setDoneRecipes(allFoods);\n        break;\n\n      case 'Food':\n        setDoneRecipes(allFoods.filter(recipe => recipe.type === 'food'));\n        break;\n\n      default:\n        setDoneRecipes(allFoods.filter(recipe => recipe.type === 'drink'));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageName: \"Done Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: style.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"filter-by-all-btn\",\n        type: \"button\",\n        onClick: handleClick,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"filter-by-food-btn\",\n        type: \"button\",\n        onClick: handleClick,\n        children: \"Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"filter-by-drink-btn\",\n        type: \"button\",\n        onClick: handleClick,\n        children: \"Drinks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: style.doneRecipesContainer,\n      children: doneRecipes === null || doneRecipes === void 0 ? void 0 : doneRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(DoneRecipeCard, {\n        index: index,\n        id: recipe.id,\n        name: recipe.name,\n        type: recipe.type,\n        image: recipe.image,\n        nationality: recipe.nationality,\n        category: recipe.category,\n        doneDate: recipe.doneDate,\n        tags: recipe.tags,\n        alcoholicOrNot: recipe.alcoholicOrNot\n      }, recipe.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DoneRecipes, \"IKDsCrovGtgqkK47CgJ1mz9TXAY=\");\n\n_c = DoneRecipes;\nexport default DoneRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoneRecipes\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/DoneRecipes/index.js"],"names":["React","useEffect","useState","DoneRecipeCard","style","Header","DoneRecipes","allFoods","JSON","parse","localStorage","getItem","doneRecipes","setDoneRecipes","handleClick","target","console","log","innerText","filter","recipe","type","buttons","doneRecipesContainer","map","index","id","name","image","nationality","category","doneDate","tags","alcoholicOrNot"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DoneRecipeCard from '../../components/DoneRecipeCard';\nimport style from './style.module.scss';\nimport Header from '../../components/Header';\n\nconst DoneRecipes = () => {\n  const allFoods = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  useEffect(\n    () => {\n      setDoneRecipes(JSON.parse(localStorage.getItem('doneRecipes')));\n    }, [],\n  );\n\n  const handleClick = ({ target }) => {\n    console.log(target.innerText);\n    switch (target.innerText) {\n    case 'All':\n      setDoneRecipes(allFoods);\n      break;\n    case 'Food':\n      setDoneRecipes(allFoods.filter((recipe) => recipe.type === 'food'));\n      break;\n    default:\n      setDoneRecipes(allFoods.filter((recipe) => recipe.type === 'drink'));\n    }\n  };\n  return (\n    <>\n      <Header pageName=\"Done Recipes\" />\n      <nav className={ style.buttons }>\n        <button\n          data-testid=\"filter-by-all-btn\"\n          type=\"button\"\n          onClick={ handleClick }\n        >\n          All\n        </button>\n        <button\n          data-testid=\"filter-by-food-btn\"\n          type=\"button\"\n          onClick={ handleClick }\n        >\n          Food\n        </button>\n        <button\n          data-testid=\"filter-by-drink-btn\"\n          type=\"button\"\n          onClick={ handleClick }\n        >\n          Drinks\n        </button>\n      </nav>\n      <section className={ style.doneRecipesContainer }>\n        {doneRecipes?.map((recipe, index) => (\n          <DoneRecipeCard\n            key={ recipe.name }\n            index={ index }\n            id={ recipe.id }\n            name={ recipe.name }\n            type={ recipe.type }\n            image={ recipe.image }\n            nationality={ recipe.nationality }\n            category={ recipe.category }\n            doneDate={ recipe.doneDate }\n            tags={ recipe.tags }\n            alcoholicOrNot={ recipe.alcoholicOrNot }\n          />\n        ))}\n      </section>\n    </>\n  );\n};\n\nexport default DoneRecipes;\n"]},"metadata":{},"sourceType":"module"}