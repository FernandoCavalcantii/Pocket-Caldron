{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Recipes-App/Recipes-App/src/pages/ExploreDrinksIngredients/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport { getIngredientsImage, getIngredientsName } from '../../services/api';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExploreIngredients = () => {\n  _s();\n\n  const [ingredientsName, setIngredientsName] = useState([]);\n  const [ingredientsImages, setIngredientsImages] = useState([]);\n\n  const getImages = arr => {\n    arr.forEach(name => {\n      const response = getIngredientsImage('thecocktaildb', name.strIngredient1);\n      setIngredientsImages(state => [...state, response]);\n    });\n  };\n\n  const getIngredients = useCallback(async () => {\n    const response = await getIngredientsName('thecocktaildb');\n    const newArr = response.drinks.slice(0, Number('12'));\n    setIngredientsName(newArr);\n    getImages(newArr);\n  }, []);\n  useEffect(() => {\n    getIngredients();\n  }, [getIngredients]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageName: \"Explore Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: ingredientsName.map((name, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/drinks\",\n        \"data-testid\": `${index}-ingredient-card`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": `${index}-card-img`,\n          src: ingredientsImages[index],\n          alt: \"foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": `${index}-card-name`,\n          children: name.strIngredient1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, Math.random(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // ExploreIngredients.propTypes = {\n//   name: PropTypes.string,\n// }.isRequired;\n\n\n_s(ExploreIngredients, \"6TeVLkqkVs4ToNQ/NywfI5dGVvY=\");\n\n_c = ExploreIngredients;\nexport default ExploreIngredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExploreIngredients\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Recipes-App/Recipes-App/src/pages/ExploreDrinksIngredients/index.jsx"],"names":["React","useState","useEffect","useCallback","Link","Footer","Header","getIngredientsImage","getIngredientsName","style","ExploreIngredients","ingredientsName","setIngredientsName","ingredientsImages","setIngredientsImages","getImages","arr","forEach","name","response","strIngredient1","state","getIngredients","newArr","drinks","slice","Number","container","map","index","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,oBAAxD;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cb,QAAQ,CAAC,EAAD,CAA1D;;AAEA,QAAMc,SAAS,GAAIC,GAAD,IAAS;AACzBA,IAAAA,GAAG,CAACC,OAAJ,CAAaC,IAAD,IAAU;AACpB,YAAMC,QAAQ,GAAGZ,mBAAmB,CAAC,eAAD,EAAkBW,IAAI,CAACE,cAAvB,CAApC;AACAN,MAAAA,oBAAoB,CAAEO,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAWF,QAAX,CAAZ,CAApB;AACD,KAHD;AAID,GALD;;AAOA,QAAMG,cAAc,GAAGnB,WAAW,CAChC,YAAY;AACV,UAAMgB,QAAQ,GAAG,MAAMX,kBAAkB,CAAC,eAAD,CAAzC;AACA,UAAMe,MAAM,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,MAAM,CAAC,IAAD,CAA/B,CAAf;AACAd,IAAAA,kBAAkB,CAACW,MAAD,CAAlB;AACAR,IAAAA,SAAS,CAACQ,MAAD,CAAT;AACD,GAN+B,EAM7B,EAN6B,CAAlC;AASArB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAGb,KAAK,CAACkB,SAAvB;AAAA,gBACGhB,eAAe,CAACiB,GAAhB,CAAoB,CAACV,IAAD,EAAOW,KAAP,kBACnB,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,SADL;AAGE,uBAAe,GAAEA,KAAM,kBAHzB;AAAA,gCAKE;AACE,yBAAe,GAAEA,KAAM,WADzB;AAEE,UAAA,GAAG,EAAGhB,iBAAiB,CAACgB,KAAD,CAFzB;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE;AACE,yBAAe,GAAEA,KAAM,YADzB;AAAA,oBAGIX,IAAI,CAACE;AAHT;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAEQU,IAAI,CAACC,MAAL,EAFR;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAsBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA,kBADF;AA0BD,CAlDD,C,CAoDA;AACA;AACA;;;GAtDMrB,kB;;KAAAA,kB;AAwDN,eAAeA,kBAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport { getIngredientsImage, getIngredientsName } from '../../services/api';\n\nimport style from './style.module.scss';\n\nconst ExploreIngredients = () => {\n  const [ingredientsName, setIngredientsName] = useState([]);\n  const [ingredientsImages, setIngredientsImages] = useState([]);\n\n  const getImages = (arr) => {\n    arr.forEach((name) => {\n      const response = getIngredientsImage('thecocktaildb', name.strIngredient1);\n      setIngredientsImages((state) => [...state, response]);\n    });\n  };\n\n  const getIngredients = useCallback(\n    async () => {\n      const response = await getIngredientsName('thecocktaildb');\n      const newArr = response.drinks.slice(0, Number('12'));\n      setIngredientsName(newArr);\n      getImages(newArr);\n    }, [],\n  );\n\n  useEffect(() => {\n    getIngredients();\n  }, [getIngredients]);\n\n  return (\n    <>\n      <Header pageName=\"Explore Ingredients\" />\n      <div className={ style.container }>\n        {ingredientsName.map((name, index) => (\n          <Link\n            to=\"/drinks\"\n            key={ Math.random() }\n            data-testid={ `${index}-ingredient-card` }\n          >\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ ingredientsImages[index] }\n              alt=\"foto\"\n            />\n            <span\n              data-testid={ `${index}-card-name` }\n            >\n              { name.strIngredient1 }\n            </span>\n          </Link>\n        ))}\n      </div>\n      <Footer />\n    </>\n  );\n};\n\n// ExploreIngredients.propTypes = {\n//   name: PropTypes.string,\n// }.isRequired;\n\nexport default ExploreIngredients;\n"]},"metadata":{},"sourceType":"module"}