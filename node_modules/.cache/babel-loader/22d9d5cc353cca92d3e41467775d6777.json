{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/components/SearchInput/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getFoodsByName, getFoodsByIngredients, getFoodsByFirstLetter, getDrinksByName, getDrinksByFirstLetter, getDrinksByIngredients } from '../../services/api';\nimport setFoods from '../../Redux/actions/foodsActions';\nimport setDrinks from '../../Redux/actions/drinksActions';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchInput() {\n  _s();\n\n  const ERROR = 'Sorry, we haven\\'t found any recipes for these filters.';\n  const {\n    pathname\n  } = useLocation();\n  const [radio, setRadio] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const dispatch = useDispatch();\n\n  const handleRadioChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setRadio(target.parentNode.innerText);\n  };\n\n  const handleTextChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setTextInput(target.value);\n  };\n\n  const getByIngredients = async () => {\n    if (pathname === '/foods') {\n      const foodsI = await getFoodsByIngredients(textInput);\n\n      if (foodsI.meals === null) {\n        global.alert(ERROR);\n      }\n\n      dispatch(setFoods(foodsI.meals));\n    }\n\n    if (pathname === '/drinks') {\n      try {\n        const drinksI = await getDrinksByIngredients(textInput);\n        dispatch(setDrinks(drinksI.drinks));\n      } catch {\n        global.alert(ERROR);\n      }\n    }\n  };\n\n  const getByName = async () => {\n    if (pathname === '/foods') {\n      const foodsI = await getFoodsByName(textInput);\n\n      if (foodsI.meals === null) {\n        global.alert(ERROR);\n      }\n\n      dispatch(setFoods(foodsI.meals));\n    }\n\n    if (pathname === '/drinks') {\n      const drinksI = await getDrinksByName(textInput);\n\n      if (drinksI.drinks === null) {\n        global.alert(ERROR);\n      }\n\n      dispatch(setDrinks(drinksI.drinks));\n    }\n  };\n\n  const getByFirstLetter = async () => {\n    if (pathname === '/foods') {\n      const foodsI = await getFoodsByFirstLetter(textInput);\n\n      if (foodsI.meals === null) {\n        global.alert(ERROR);\n      }\n\n      dispatch(setFoods(foodsI.meals));\n    }\n\n    if (pathname === '/drinks') {\n      const drinksI = await getDrinksByFirstLetter(textInput);\n\n      if (drinksI.drinks === null) {\n        global.alert(ERROR);\n      }\n\n      dispatch(setDrinks(drinksI.drinks));\n    }\n  };\n\n  const handleClick = async () => {\n    if (radio === 'Ingredients') {\n      getByIngredients();\n    }\n\n    if (radio === 'Name') {\n      getByName();\n    }\n\n    if (radio === 'First Letter') {\n      if (textInput.length === 1) {\n        getByFirstLetter();\n      } else {\n        global.alert('Your search must have only 1 (one) character');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: style.searchContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search-input\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        \"data-testid\": \"search-input\",\n        onChange: handleTextChange,\n        placeholder: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredient-search-radio\",\n        children: [\"Ingredients\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"header-radios\",\n          type: \"radio\",\n          \"data-testid\": \"ingredient-search-radio\",\n          onChange: handleRadioChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name-search-radio\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"header-radios\",\n          type: \"radio\",\n          \"data-testid\": \"name-search-radio\",\n          onChange: handleRadioChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"first-letter-search-radio\",\n        children: [\"First Letter\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"header-radios\",\n          \"data-testid\": \"first-letter-search-radio\",\n          onChange: handleRadioChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"exec-search-btn\",\n      onClick: handleClick,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchInput, \"NwFV36g4pL66aTs+88Y8U1SNeY8=\", false, function () {\n  return [useLocation, useDispatch];\n});\n\n_c = SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/components/SearchInput/index.js"],"names":["React","useState","useLocation","useDispatch","getFoodsByName","getFoodsByIngredients","getFoodsByFirstLetter","getDrinksByName","getDrinksByFirstLetter","getDrinksByIngredients","setFoods","setDrinks","style","SearchInput","ERROR","pathname","radio","setRadio","textInput","setTextInput","dispatch","handleRadioChange","target","parentNode","innerText","handleTextChange","value","getByIngredients","foodsI","meals","global","alert","drinksI","drinks","getByName","getByFirstLetter","handleClick","length","searchContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getFoodsByName,\n  getFoodsByIngredients,\n  getFoodsByFirstLetter,\n  getDrinksByName,\n  getDrinksByFirstLetter,\n  getDrinksByIngredients,\n} from '../../services/api';\nimport setFoods from '../../Redux/actions/foodsActions';\nimport setDrinks from '../../Redux/actions/drinksActions';\n\nimport style from './style.module.scss';\n\nexport default function SearchInput() {\n  const ERROR = 'Sorry, we haven\\'t found any recipes for these filters.';\n  const { pathname } = useLocation();\n  const [radio, setRadio] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const dispatch = useDispatch();\n  const handleRadioChange = ({ target }) => {\n    setRadio(target.parentNode.innerText);\n  };\n  const handleTextChange = ({ target }) => {\n    setTextInput(target.value);\n  };\n\n  const getByIngredients = async () => {\n    if (pathname === '/foods') {\n      const foodsI = await getFoodsByIngredients(textInput);\n      if (foodsI.meals === null) {\n        global.alert(ERROR);\n      }\n      dispatch(setFoods(foodsI.meals));\n    }\n    if (pathname === '/drinks') {\n      try {\n        const drinksI = await getDrinksByIngredients(textInput);\n        dispatch(setDrinks(drinksI.drinks));\n      } catch {\n        global.alert(ERROR);\n      }\n    }\n  };\n\n  const getByName = async () => {\n    if (pathname === '/foods') {\n      const foodsI = await getFoodsByName(textInput);\n      if (foodsI.meals === null) {\n        global.alert(ERROR);\n      }\n      dispatch(setFoods(foodsI.meals));\n    }\n    if (pathname === '/drinks') {\n      const drinksI = await getDrinksByName(textInput);\n      if (drinksI.drinks === null) {\n        global.alert(ERROR);\n      }\n      dispatch(setDrinks(drinksI.drinks));\n    }\n  };\n\n  const getByFirstLetter = async () => {\n    if (pathname === '/foods') {\n      const foodsI = await getFoodsByFirstLetter(textInput);\n      if (foodsI.meals === null) {\n        global.alert(ERROR);\n      }\n      dispatch(setFoods(foodsI.meals));\n    }\n    if (pathname === '/drinks') {\n      const drinksI = await getDrinksByFirstLetter(textInput);\n      if (drinksI.drinks === null) {\n        global.alert(ERROR);\n      }\n      dispatch(setDrinks(drinksI.drinks));\n    }\n  };\n\n  const handleClick = async () => {\n    if (radio === 'Ingredients') {\n      getByIngredients();\n    }\n    if (radio === 'Name') {\n      getByName();\n    }\n    if (radio === 'First Letter') {\n      if (textInput.length === 1) {\n        getByFirstLetter();\n      } else {\n        global.alert('Your search must have only 1 (one) character');\n      }\n    }\n  };\n\n  return (\n    <form className={ style.searchContainer }>\n      <label htmlFor=\"search-input\">\n        <input\n          type=\"text\"\n          data-testid=\"search-input\"\n          onChange={ handleTextChange }\n          placeholder=\"search\"\n        />\n      </label>\n      <fieldset>\n        <label htmlFor=\"ingredient-search-radio\">\n          Ingredients\n          <input\n            name=\"header-radios\"\n            type=\"radio\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={ handleRadioChange }\n          />\n        </label>\n        <label htmlFor=\"name-search-radio\">\n          Name\n          <input\n            name=\"header-radios\"\n            type=\"radio\"\n            data-testid=\"name-search-radio\"\n            onChange={ handleRadioChange }\n          />\n        </label>\n        <label htmlFor=\"first-letter-search-radio\">\n          First Letter\n          <input\n            type=\"radio\"\n            name=\"header-radios\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={ handleRadioChange }\n          />\n        </label>\n      </fieldset>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ handleClick }\n      >\n        Search\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}