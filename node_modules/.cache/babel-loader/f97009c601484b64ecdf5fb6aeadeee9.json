{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/ExploreFoodsNationalities/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport RecipeCard from '../../components/RecipeCard';\nimport setFoods from '../../Redux/actions/foodsActions';\nimport { getFoodsByNation, getFoodsRecipes, getNationalitiesLsit } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExploreFoodsNationalities = () => {\n  _s();\n\n  const [nationList, setNationList] = useState([]);\n  const foods = useSelector(state => state.foodsReducer.foods);\n  const dispatch = useDispatch();\n\n  const getListNames = async () => {\n    const res = await getNationalitiesLsit();\n    setNationList(res.meals);\n  };\n\n  const fetchFoods = useCallback(async () => {\n    const res = await getFoodsRecipes();\n    dispatch(setFoods(res.meals));\n  }, [dispatch]);\n\n  const changeFoods = async _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n\n    if (value !== 'all') {\n      const res = await getFoodsByNation(value);\n      dispatch(setFoods(res.meals));\n    } else {\n      fetchFoods();\n    }\n  };\n\n  useEffect(() => {\n    getListNames();\n    fetchFoods();\n  }, [fetchFoods]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageName: \"Explore Nationalities\",\n      searchEnable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"nationsList\",\n        \"data-testid\": \"explore-by-nationality-dropdown\",\n        onChange: changeFoods,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-testid\": \"All-option\",\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), nationList.length >= 1 && nationList.map(nation => /*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-testid\": `${nation.strArea}-option`,\n          value: nation.strArea,\n          children: nation.strArea\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipeContainer\",\n      children: foods === null || foods === void 0 ? void 0 : foods.map((food, index) => {\n        if (index < Number('12')) {\n          return /*#__PURE__*/_jsxDEV(RecipeCard, {\n            testIdIndex: index,\n            locale: true,\n            name: food.strMeal,\n            thumb: food.strMealThumb,\n            recipeId: food.idMeal\n          }, food.strMeal, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        }\n\n        return false;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExploreFoodsNationalities, \"AHGBk11T3y15h0YINGPoC8n2hLQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ExploreFoodsNationalities;\nexport default ExploreFoodsNationalities;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExploreFoodsNationalities\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/ExploreFoodsNationalities/index.jsx"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Footer","Header","RecipeCard","setFoods","getFoodsByNation","getFoodsRecipes","getNationalitiesLsit","ExploreFoodsNationalities","nationList","setNationList","foods","state","foodsReducer","dispatch","getListNames","res","meals","fetchFoods","changeFoods","target","value","length","map","nation","strArea","Math","random","food","index","Number","strMeal","strMealThumb","idMeal"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport RecipeCard from '../../components/RecipeCard';\nimport setFoods from '../../Redux/actions/foodsActions';\nimport { getFoodsByNation,\n  getFoodsRecipes, getNationalitiesLsit } from '../../services/api';\n\nconst ExploreFoodsNationalities = () => {\n  const [nationList, setNationList] = useState([]);\n  const foods = useSelector((state) => state.foodsReducer.foods);\n  const dispatch = useDispatch();\n\n  const getListNames = async () => {\n    const res = await getNationalitiesLsit();\n    setNationList(res.meals);\n  };\n\n  const fetchFoods = useCallback(\n    async () => {\n      const res = await getFoodsRecipes();\n      dispatch(setFoods(res.meals));\n    }, [dispatch],\n  );\n\n  const changeFoods = async ({ target: { value } }) => {\n    if (value !== 'all') {\n      const res = await getFoodsByNation(value);\n      dispatch(setFoods(res.meals));\n    } else {\n      fetchFoods();\n    }\n  };\n\n  useEffect(() => {\n    getListNames();\n    fetchFoods();\n  }, [fetchFoods]);\n\n  return (\n    <div>\n      <Header pageName=\"Explore Nationalities\" searchEnable />\n      <div className=\"container\">\n        <select\n          name=\"nationsList\"\n          data-testid=\"explore-by-nationality-dropdown\"\n          onChange={ changeFoods }\n        >\n          <option\n            data-testid=\"All-option\"\n            value=\"all\"\n          >\n            All\n          </option>\n          {nationList.length >= 1 && nationList.map((nation) => (\n            <option\n              key={ Math.random() }\n              data-testid={ `${nation.strArea}-option` }\n              value={ nation.strArea }\n            >\n              {nation.strArea}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"recipeContainer\">\n        {foods?.map((food, index) => {\n          if (index < Number('12')) {\n            return (\n              <RecipeCard\n                testIdIndex={ index }\n                locale\n                key={ food.strMeal }\n                name={ food.strMeal }\n                thumb={ food.strMealThumb }\n                recipeId={ food.idMeal }\n              />\n            );\n          }\n          return false;\n        })}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ExploreFoodsNationalities;\n"]},"metadata":{},"sourceType":"module"}