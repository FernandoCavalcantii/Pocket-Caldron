{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Recipes-App/Recipes-App/src/pages/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport saveLogin from '../../Redux/actions/loginActions';\nimport style from './style.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disableBtn, setDisableBtn] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const passwordLength = 7;\n  useEffect(() => {\n    const emailCheck = () => {\n      const regex = /\\S+@\\S+\\.\\S+/i;\n\n      if (String(email).match(regex)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    const enableButton = () => {\n      if (password.length >= passwordLength && emailCheck()) {\n        setDisableBtn(false);\n      } else {\n        setDisableBtn(true);\n      }\n    };\n\n    enableButton();\n  }, [email, password]);\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      value\n    } = target;\n\n    switch (target.type) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      default:\n        setPassword(value);\n    }\n  };\n\n  const handleClick = () => {\n    dispatch(saveLogin(email));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    const storageEmail = JSON.stringify({\n      email\n    });\n    localStorage.setItem('user', storageEmail);\n    setRedirect(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pocket Caldron\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"email-input\",\n        type: \"email\",\n        placeholder: \"e-mail\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"password-input\",\n        type: \"password\",\n        placeholder: \"senha\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"login-submit-btn\",\n        type: \"button\",\n        onClick: handleClick,\n        disabled: disableBtn,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"kZE0ghq7fWeU5Sib8Ax7D1kYQxs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Recipes-App/Recipes-App/src/pages/Login/index.js"],"names":["React","useState","useEffect","Redirect","useDispatch","saveLogin","style","Login","dispatch","email","setEmail","password","setPassword","disableBtn","setDisableBtn","redirect","setRedirect","passwordLength","emailCheck","regex","String","match","enableButton","length","handleChange","target","value","type","handleClick","localStorage","setItem","storageEmail","JSON","stringify","container","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport saveLogin from '../../Redux/actions/loginActions';\n\nimport style from './style.module.css';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disableBtn, setDisableBtn] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const passwordLength = 7;\n\n  useEffect(() => {\n    const emailCheck = () => {\n      const regex = /\\S+@\\S+\\.\\S+/i;\n      if (String(email).match(regex)) {\n        return true;\n      }\n      return false;\n    };\n\n    const enableButton = () => {\n      if (password.length >= passwordLength && emailCheck()) {\n        setDisableBtn(false);\n      } else {\n        setDisableBtn(true);\n      }\n    };\n    enableButton();\n  }, [email, password]);\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    switch (target.type) {\n    case 'email':\n      setEmail(value);\n      break;\n    default:\n      setPassword(value);\n    }\n  };\n\n  const handleClick = () => {\n    dispatch(saveLogin(email));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    const storageEmail = JSON.stringify({ email });\n    localStorage.setItem('user', storageEmail);\n    setRedirect(true);\n  };\n\n  return (\n    <div className={ style.container }>\n      <div className={ style.form }>\n        <h1>Pocket Caldron</h1>\n        <input\n          data-testid=\"email-input\"\n          type=\"email\"\n          placeholder=\"e-mail\"\n          onChange={ handleChange }\n        />\n        <input\n          data-testid=\"password-input\"\n          type=\"password\"\n          placeholder=\"senha\"\n          onChange={ handleChange }\n        />\n        <button\n          data-testid=\"login-submit-btn\"\n          type=\"button\"\n          onClick={ handleClick }\n          disabled={ disableBtn }\n        >\n          Enter\n        </button>\n        {redirect && <Redirect to=\"/foods\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}