{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/DrinkDetails/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { getDrinkById, getFoodsRecipes } from '../../services/api';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteIcon from '../../images/whiteHeartIcon.svg';\nimport blackIcon from '../../images/blackHeartIcon.svg';\nimport getIngredientsAndMeasures, { isRecipeCompleted, isInProgressRecipe, isRecipeFavorited, toggleFavoriteRecipe } from '../../helpers';\nimport Carousel from '../../components/Carousel';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Details = () => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const history = useHistory();\n  const [recipe, setRecipe] = useState([]);\n  const [IngredientsdAndMeasures, setIngredientsAndMeasures] = useState([]);\n  const [recomendation, setRecomendation] = useState([]);\n  const [isCompleted, setIsCompleted] = useState([false]);\n  const [isInProgress, setIsInProgress] = useState([false]);\n  const [showLinkCopied, setShowLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n  const getDrink = useCallback(async () => {\n    const drink = await getDrinkById(pathname.split('/')[2]);\n    setRecipe(drink.drinks);\n    setIngredientsAndMeasures(getIngredientsAndMeasures(Object.entries(drink.drinks[0])));\n  }, [pathname]);\n  const getRecomendation = useCallback(async () => {\n    const res = await getFoodsRecipes();\n    setRecomendation(res.meals);\n  }, []);\n  useEffect(() => {\n    getDrink();\n    getRecomendation();\n    setIsCompleted(isRecipeCompleted(pathname.split('/')[2]));\n    setIsInProgress(isInProgressRecipe(pathname.split('/')[2], 'cocktails'));\n    setIsFavorited(isRecipeFavorited(pathname.split('/')[2]));\n  }, [getDrink, getRecomendation, pathname]);\n  return recipe === null || recipe === void 0 ? void 0 : recipe.map(drink => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: drink.strDrinkThumb,\n      alt: drink.strDrinkThumb,\n      \"data-testid\": \"recipe-photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.recipeHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          \"data-testid\": \"recipe-title\",\n          children: drink.strDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"recipe-category\",\n          children: drink.strAlcoholic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"share-btn\",\n          onClick: () => {\n            navigator.clipboard.writeText('http://localhost:3000/drinks/'.concat(drink.idDrink));\n            setShowLinkCopied(true);\n            setTimeout(() => {\n              setShowLinkCopied(false);\n            }, [Number('1000')]);\n          },\n          children: [showLinkCopied && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              position: 'absolute',\n              top: '0',\n              left: '0',\n              right: '0',\n              margin: 'auto'\n            },\n            children: \"Link copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareIcon,\n            alt: \"share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            console.log(drink.alcoholicOrNot);\n            toggleFavoriteRecipe(isFavorited, {\n              id: drink.idDrink,\n              type: 'drink',\n              nationality: '',\n              category: drink.strCategory,\n              alcoholicOrNot: drink.strAlcoholic,\n              name: drink.strDrink,\n              image: drink.strDrinkThumb\n            });\n            setIsFavorited(!isFavorited);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-testid\": \"favorite-btn\",\n            src: isFavorited ? blackIcon : whiteIcon,\n            alt: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: IngredientsdAndMeasures.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": String(index).concat('-ingredient-name-and-measure'),\n          children: [value.ingredient, value.measure && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"-\", value.measure]\n          }, void 0, true)]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: drink.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        recomendation: recomendation,\n        drinkOrMeal: \"Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), !isCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"start-recipe-btn\",\n        style: {\n          position: 'fixed',\n          bottom: 0\n        },\n        onClick: () => history.push('/drinks/'.concat(drink.idDrink, '/in-progress')),\n        children: isInProgress ? 'Continue Recipe' : 'Start recipe'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, drink.idDrink, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this));\n};\n\n_s(Details, \"sZpzEmwefpl/y7QbEE5JhrKWOew=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/fernando/Pasta1/Projetos/sd-017-project-recipes-app/src/pages/DrinkDetails/index.jsx"],"names":["React","useState","useEffect","useCallback","useLocation","useHistory","getDrinkById","getFoodsRecipes","shareIcon","whiteIcon","blackIcon","getIngredientsAndMeasures","isRecipeCompleted","isInProgressRecipe","isRecipeFavorited","toggleFavoriteRecipe","Carousel","style","Details","pathname","history","recipe","setRecipe","IngredientsdAndMeasures","setIngredientsAndMeasures","recomendation","setRecomendation","isCompleted","setIsCompleted","isInProgress","setIsInProgress","showLinkCopied","setShowLinkCopied","isFavorited","setIsFavorited","getDrink","drink","split","drinks","Object","entries","getRecomendation","res","meals","map","container","strDrinkThumb","recipeHeader","strDrink","strAlcoholic","navigator","clipboard","writeText","concat","idDrink","setTimeout","Number","position","top","left","right","margin","console","log","alcoholicOrNot","id","type","nationality","category","strCategory","name","image","value","index","String","ingredient","measure","Math","random","strInstructions","bottom","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { getDrinkById, getFoodsRecipes } from '../../services/api';\n\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteIcon from '../../images/whiteHeartIcon.svg';\nimport blackIcon from '../../images/blackHeartIcon.svg';\n\nimport getIngredientsAndMeasures, {\n  isRecipeCompleted, isInProgressRecipe, isRecipeFavorited,\n  toggleFavoriteRecipe } from '../../helpers';\n\nimport Carousel from '../../components/Carousel';\n\nimport style from './style.module.scss';\n\nconst Details = () => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const [recipe, setRecipe] = useState([]);\n  const [IngredientsdAndMeasures, setIngredientsAndMeasures] = useState([]);\n  const [recomendation, setRecomendation] = useState([]);\n  const [isCompleted, setIsCompleted] = useState([false]);\n  const [isInProgress, setIsInProgress] = useState([false]);\n  const [showLinkCopied, setShowLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n\n  const getDrink = useCallback(\n    async () => {\n      const drink = await getDrinkById(pathname.split('/')[2]);\n      setRecipe(drink.drinks);\n      setIngredientsAndMeasures(\n        getIngredientsAndMeasures(Object.entries(drink.drinks[0])),\n      );\n    },\n    [pathname],\n  );\n\n  const getRecomendation = useCallback(async () => {\n    const res = await getFoodsRecipes();\n    setRecomendation(res.meals);\n  }, []);\n\n  useEffect(() => {\n    getDrink();\n    getRecomendation();\n    setIsCompleted(isRecipeCompleted(pathname.split('/')[2]));\n    setIsInProgress(isInProgressRecipe(pathname.split('/')[2], 'cocktails'));\n    setIsFavorited(isRecipeFavorited(pathname.split('/')[2]));\n  }, [getDrink, getRecomendation, pathname]);\n\n  return (\n    recipe?.map((drink) => (\n      <section className={ style.container } key={ drink.idDrink }>\n        <img\n          src={ drink.strDrinkThumb }\n          alt={ drink.strDrinkThumb }\n          data-testid=\"recipe-photo\"\n        />\n        <div className={ style.recipeHeader }>\n          <aside>\n            <h1 data-testid=\"recipe-title\">{drink.strDrink}</h1>\n            <span data-testid=\"recipe-category\">{drink.strAlcoholic}</span>\n          </aside>\n          <div>\n            <button\n              type=\"button\"\n              data-testid=\"share-btn\"\n              onClick={ () => {\n                navigator.clipboard.writeText(\n                  'http://localhost:3000/drinks/'.concat(drink.idDrink),\n                );\n                setShowLinkCopied(true);\n                setTimeout(() => {\n                  setShowLinkCopied(false);\n                }, [Number('1000')]);\n              } }\n            >\n              {showLinkCopied && (\n                <p\n                  style={ { position: 'absolute',\n                    top: '0',\n                    left: '0',\n                    right: '0',\n                    margin: 'auto' } }\n                >\n                  Link copied!\n                </p>\n              )}\n              <img src={ shareIcon } alt=\"share\" />\n            </button>\n            <button\n              type=\"button\"\n              onClick={ () => {\n                console.log(drink.alcoholicOrNot);\n                toggleFavoriteRecipe(isFavorited, {\n                  id: drink.idDrink,\n                  type: 'drink',\n                  nationality: '',\n                  category: drink.strCategory,\n                  alcoholicOrNot: drink.strAlcoholic,\n                  name: drink.strDrink,\n                  image: drink.strDrinkThumb,\n                });\n                setIsFavorited(!isFavorited);\n              } }\n            >\n              <img\n                data-testid=\"favorite-btn\"\n                src={ isFavorited ? blackIcon : whiteIcon }\n                alt=\"favorite\"\n              />\n            </button>\n          </div>\n        </div>\n        <main>\n          <h3>Ingredients</h3>\n          <ul>\n            {IngredientsdAndMeasures.map((value, index) => (\n              <li\n                key={ Math.random() }\n                data-testid={ String(index).concat('-ingredient-name-and-measure') }\n              >\n                {value.ingredient}\n                {value.measure && (\n                  <>\n                    -\n                    {value.measure}\n                  </>\n                )}\n              </li>\n            ))}\n          </ul>\n          <div>\n            <h3>Instructions</h3>\n            <p data-testid=\"instructions\">\n              {drink.strInstructions}\n            </p>\n          </div>\n          <Carousel recomendation={ recomendation } drinkOrMeal=\"Meal\" />\n          {!isCompleted && (\n            <button\n              type=\"button\"\n              data-testid=\"start-recipe-btn\"\n              style={ { position: 'fixed', bottom: 0 } }\n              onClick={ () => history\n                .push('/drinks/'.concat(drink.idDrink, '/in-progress')) }\n\n            >\n              {isInProgress ? 'Continue Recipe' : 'Start recipe'}\n            </button>\n          )}\n        </main>\n      </section>\n    ))\n  );\n};\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}